#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Areas.Config.Views.DocumentTemplate
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 2 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
    using Disco.Services.Documents.ManagedGroups;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
    using Disco.Services.Interop.ActiveDirectory;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    
    #line 4 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
    using Disco.Web.Areas.Config.Models.Shared;
    
    #line default
    #line hidden
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Config/Views/DocumentTemplate/Show.cshtml")]
    public partial class Show : Disco.Services.Web.WebViewPage<Disco.Web.Areas.Config.Models.DocumentTemplate.ShowModel>
    {
        public Show()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
  
    Authorization.Require(Claims.Config.DocumentTemplate.Show);

    var canConfig = Authorization.Has(Claims.Config.DocumentTemplate.Configure);

    var hideAdvanced =
        Model.DocumentTemplate.UsersLinkedGroup == null &&
        Model.DocumentTemplate.DevicesLinkedGroup == null &&
        Model.DocumentTemplate.FilterExpression == null &&
        Model.DocumentTemplate.OnGenerateExpression == null &&
        Model.DocumentTemplate.OnImportAttachmentExpression == null &&
        Model.TemplateExpressions.All(e => e.All(p => !p.ParseError));

    #region Can Bulk Generate
    var canBulkGenerate = Authorization.Has(Claims.Config.DocumentTemplate.BulkGenerate);
    if (canBulkGenerate)
    {
        switch (Model.DocumentTemplate.Scope)
        {
            case DocumentTemplate.DocumentTemplateScopes.Device:
                canBulkGenerate = Authorization.Has(Claims.Device.Actions.GenerateDocuments);
                break;
            case DocumentTemplate.DocumentTemplateScopes.Job:
                canBulkGenerate = Authorization.Has(Claims.Job.Actions.GenerateDocuments);
                break;
            case DocumentTemplate.DocumentTemplateScopes.User:
                canBulkGenerate = Authorization.Has(Claims.User.Actions.GenerateDocuments);
                break;
            default:
                throw new InvalidOperationException("Invalid DocumentType Scope");
        }
    }
    #endregion

    ViewBag.Title = Html.ToBreadcrumb("Configuration", MVC.Config.Config.Index(), "Document Templates", MVC.Config.DocumentTemplate.Index(null), Model.DocumentTemplate.Description);

    if (canConfig)
    {
        Html.BundleDeferred("~/ClientScripts/Modules/Disco-PropertyChangeHelpers");
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"Config_DocumentTemplates_Show\"");

WriteAttribute("class", Tuple.Create(" class=\"", 2024), Tuple.Create("\"", 2079)
            
            #line 46 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
, Tuple.Create(Tuple.Create("", 2032), Tuple.Create<System.Object, System.Int32>(hideAdvanced ? " Config_HideAdvanced" : null
            
            #line default
            #line hidden
, 2032), false)
);

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"form\"");

WriteLiteral(" style=\"width: 650px; margin: 10px auto 20px;\"");

WriteLiteral(">\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                  " +
"  <th>\r\n                        Id:\r\n                    </th>\r\n                " +
"    <td>\r\n                        <code>");

            
            #line 55 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         Write(Html.DisplayFor(model => model.DocumentTemplate.Id));

            
            #line default
            #line hidden
WriteLiteral("</code>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n" +
"                    <th>\r\n                        Statistics:\r\n                 " +
"   </th>\r\n                    <td>\r\n                        <strong>");

            
            #line 63 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                           Write(Model.StoredInstanceCount.ToString("n0"));

            
            #line default
            #line hidden
WriteLiteral("</strong> Stored Instance");

            
            #line 63 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                              Write(Model.StoredInstanceCount == 1 ? null : "s");

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n       " +
"             <th>\r\n                        Description:\r\n                    </t" +
"h>\r\n                    <td>\r\n");

            
            #line 71 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 71 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         if (canConfig)
                        {
                            
            
            #line default
            #line hidden
            
            #line 73 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Html.TextBoxFor(model => model.DocumentTemplate.Description));

            
            #line default
            #line hidden
            
            #line 73 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                         
                            
            
            #line default
            #line hidden
            
            #line 74 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 74 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                   
                            
            
            #line default
            #line hidden
            
            #line 75 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 75 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                $(function () {
                                    document.DiscoFunctions.PropertyChangeHelper(
                                        $('#DocumentTemplate_Description'),
                                        'Description',
                                        '");

            
            #line 81 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    Write(Url.Action(MVC.API.DocumentTemplate.UpdateDescription(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                        \'Description\'\r\n                      " +
"              );\r\n                                });\r\n                         " +
"   </script>\r\n");

            
            #line 86 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        }
                        else
                        {
                            if (string.IsNullOrEmpty(Model.DocumentTemplate.Description))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 92 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                            else
                            {
                                
            
            #line default
            #line hidden
            
            #line 95 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                           Write(Model.DocumentTemplate.Description);

            
            #line default
            #line hidden
            
            #line 95 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                   
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </td>\r\n                </tr>\r\n                <tr>\r\n         " +
"           <th>\r\n                        &nbsp;\r\n                    </th>\r\n    " +
"                <td>\r\n                        <div>\r\n");

            
            #line 106 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 106 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                             if (canConfig)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" id=\"DocumentTemplate_IsHidden\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" ");

            
            #line 108 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                  Write(Model.DocumentTemplate.IsHidden ? new MvcHtmlString("checked=\"checked\" ") : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                                <label");

WriteLiteral(" for=\"DocumentTemplate_IsHidden\"");

WriteLiteral(">Hidden</label>\r\n");

            
            #line 110 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 110 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                           Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 110 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                         

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
                                        document.DiscoFunctions.PropertyChangeHelper(
                                            $('#DocumentTemplate_IsHidden'),
                                            null,
                                            '");

            
            #line 116 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                        Write(Url.Action(MVC.API.DocumentTemplate.UpdateIsHidden(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                            \'IsHidden\'\r\n                     " +
"                   );\r\n                                    });\r\n                " +
"                </script>\r\n");

            
            #line 121 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                            else
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" id=\"DocumentTemplate_IsHidden\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" ");

            
            #line 124 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                  Write(Model.DocumentTemplate.IsHidden ? new MvcHtmlString("checked=\"checked\" ") : null);

            
            #line default
            #line hidden
WriteLiteral(" disabled=\"disabled\" />\r\n");

WriteLiteral("                                <label");

WriteLiteral(" for=\"DocumentTemplate_IsHidden\"");

WriteLiteral(">Hidden</label>\r\n");

            
            #line 126 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral(@"></i>If selected the template will not appear in the list of documents to generate.
                            </p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        Scope:
                    </th>
                    <td>
                        <h4>");

            
            #line 140 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Model.DocumentTemplate.Scope);

            
            #line default
            #line hidden
WriteLiteral(" Scope</h4>\r\n                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral("></i>This template is generated from ");

            
            #line 143 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                             Write(Model.DocumentTemplate.Scope);

            
            #line default
            #line hidden
WriteLiteral("s. Any expressions within the Template&nbsp;PDF will be evaluated within the <a");

WriteAttribute("href", Tuple.Create(" href=\"", 6904), Tuple.Create("\"", 7010)
            
            #line 143 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                       , Tuple.Create(Tuple.Create("", 6911), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.Config.DocumentTemplate.ExpressionBrowser())
            
            #line default
            #line hidden
, 6911), false)
, Tuple.Create(Tuple.Create("", 6973), Tuple.Create("#", 6973), true)
            
            #line 143 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                                                                                      , Tuple.Create(Tuple.Create("", 6974), Tuple.Create<System.Object, System.Int32>(Model.DocumentTemplate.Scope
            
            #line default
            #line hidden
, 6974), false)
, Tuple.Create(Tuple.Create("", 7005), Tuple.Create("Scope", 7005), true)
);

WriteLiteral(">");

            
            #line 143 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                                                                                                                                                                                                       Write(Model.DocumentTemplate.Scope);

            
            #line default
            #line hidden
WriteLiteral(" Scope</a>.\r\n                            </p>\r\n                        </div>\r\n  " +
"                      <div>\r\n                            <button");

WriteLiteral(" id=\"Config_DocumentTemplates_Scope_Button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Change Scope</button>\r\n                        </div>\r\n");

            
            #line 149 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 149 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         if (canConfig)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" id=\"Config_DocumentTemplates_Scope_Dialog\"");

WriteLiteral(" title=\"Change Document Template Scope\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(">\r\n");

            
            #line 152 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 152 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                 using (Html.BeginForm(MVC.API.DocumentTemplate.UpdateScope(Model.DocumentTemplate.Id, redirect: true)))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"input\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" for=\"Config_DocumentTemplates_Scope_Scope\"");

WriteLiteral(">Scope: </label>\r\n                                        <select");

WriteLiteral(" id=\"Config_DocumentTemplates_Scope_Scope\"");

WriteLiteral(" name=\"Scope\"");

WriteLiteral(">\r\n");

            
            #line 157 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 157 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                             foreach (var scope in Model.Scopes)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <option");

WriteAttribute("value", Tuple.Create(" value=\"", 8134), Tuple.Create("\"", 8148)
            
            #line 159 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
, Tuple.Create(Tuple.Create("", 8142), Tuple.Create<System.Object, System.Int32>(scope
            
            #line default
            #line hidden
, 8142), false)
);

WriteAttribute("selected", Tuple.Create(" selected=\"", 8149), Tuple.Create("\"", 8221)
            
            #line 159 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
  , Tuple.Create(Tuple.Create("", 8160), Tuple.Create<System.Object, System.Int32>(scope == Model.DocumentTemplate.Scope ? " selected" : null
            
            #line default
            #line hidden
, 8160), false)
);

WriteLiteral(">");

            
            #line 159 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                           Write(scope);

            
            #line default
            #line hidden
WriteLiteral("</option>\r\n");

            
            #line 160 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </select>\r\n                              " +
"      </div>\r\n");

            
            #line 163 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                        <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral("></i>Expressions within the Template PDF may need to be updated to reflect any ch" +
"anges to the Document Template Scope.\r\n                                    </p>\r" +
"\n                                </div>\r\n");

            
            #line 169 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 169 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                 if (Model.DocumentTemplate.UsersLinkedGroup != null || Model.DocumentTemplate.DevicesLinkedGroup != null)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"info-box error\"");

WriteLiteral(">\r\n                                        <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"fa fa-exclamation-circle\"");

WriteLiteral(@"></i><strong>Warning:</strong> This Document Template contains Linked Groups, these will be automatically updated to reflect the new Document Template Scope which <strong>may result in undesired behaviour</strong>.
                                        </p>
                                    </div>
");

            
            #line 176 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                $(function () {\r\n                             " +
"       var dialog;\r\n\r\n                                    function showDialog() " +
"{\r\n                                        if (dialog == null) {\r\n              " +
"                              dialog = $(\'#Config_DocumentTemplates_Scope_Dialog" +
"\').dialog({\r\n                                                width: 400,\r\n      " +
"                                          resizable: false,\r\n                   " +
"                             modal: true,\r\n                                     " +
"           autoOpen: false,\r\n                                                but" +
"tons: {\r\n                                                    \'Save Changes\': fun" +
"ction () {\r\n                                                        dialog.dialo" +
"g(\'option\', \'buttons\', null);\r\n                                                 " +
"       dialog.dialog(\'disable\');\r\n                                              " +
"          $(\'#Config_DocumentTemplates_Scope_Scope\').closest(\'form\').submit();\r\n" +
"                                                    },\r\n                        " +
"                            \'Cancel\': function () {\r\n                           " +
"                             dialog.dialog(\'close\');\r\n                          " +
"                          }\r\n                                                }\r\n" +
"                                            });\r\n                               " +
"         }\r\n\r\n                                        dialog.dialog(\'open\');\r\n\r\n" +
"                                        return false;\r\n                         " +
"           }\r\n\r\n                                    $(\'#Config_DocumentTemplates" +
"_Scope_Button\').click(showDialog);\r\n                                });\r\n       " +
"                     </script>\r\n");

            
            #line 210 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        ");

            
            #line 211 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         if (Model.DocumentTemplate.Scope == DocumentTemplate.DocumentTemplateScopes.Job)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <hr />\r\n");

WriteLiteral("                            <h4>Job Type Filters:</h4>\r\n");

WriteLiteral("                            <div");

WriteLiteral(" id=\"Config_DocumentTemplates_JobSubTypes\"");

WriteLiteral(">\r\n                                <div>\r\n");

            
            #line 217 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 217 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                     if (Model.DocumentTemplate.JobSubTypes.Count > 0)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <ul>\r\n");

            
            #line 220 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 220 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                             foreach (var jobType in Model.DocumentTemplate.JobSubTypes.GroupBy(jst => jst.JobType).OrderBy(jtg => jtg.Key.Description))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <li>\r\n");

WriteLiteral("                                                    ");

            
            #line 223 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                               Write(jobType.Key.Description);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    <ul>\r\n");

            
            #line 225 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 225 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                         if (jobType.Count() == Model.JobTypes.FirstOrDefault(jt => jt.Id == jobType.Key.Id).JobSubTypes.Count)
                                                        {

            
            #line default
            #line hidden
WriteLiteral("                                                            <li><span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">[All Sub Types]</span></li>\r\n");

            
            #line 228 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                        }
                                                        else
                                                        {
                                                            foreach (var jobSubType in jobType)
                                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                                <li>");

            
            #line 233 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                               Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 234 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                            }
                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                                    </ul>\r\n                      " +
"                          </li>\r\n");

            
            #line 238 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </ul>\r\n");

            
            #line 240 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    }
                                    else
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;No Filter&gt;</span>\r\n");

            
            #line 244 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n");

            
            #line 246 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 246 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                 if (canConfig)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" id=\"Config_DocumentTemplates_JobSubTypes_Update\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update</a>\r\n");

WriteLiteral("                                    <div");

WriteLiteral(" id=\"Config_DocumentTemplates_JobSubTypes_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Job Type Filter\"");

WriteLiteral(">\r\n");

            
            #line 250 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 250 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                         using (Html.BeginForm(MVC.API.DocumentTemplate.UpdateJobSubTypes(Model.DocumentTemplate.Id, null, true)))
                                        {
                                            var selectedTypes = Model.DocumentTemplate.JobSubTypes.Select(jst => jst.JobType).Distinct().ToList();
                                            foreach (var jt in Model.JobTypes)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\"jobTypes\"");

WriteLiteral(">\r\n                                                    <h4>\r\n                    " +
"                                    <input");

WriteAttribute("id", Tuple.Create(" id=\"", 14762), Tuple.Create("\"", 14781)
, Tuple.Create(Tuple.Create("", 14767), Tuple.Create("Types_", 14767), true)
            
            #line 257 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
, Tuple.Create(Tuple.Create("", 14773), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 14773), false)
);

WriteLiteral(" class=\"jobType\"");

WriteLiteral(" type=\"checkbox\"");

WriteAttribute("value", Tuple.Create(" value=\"", 14814), Tuple.Create("\"", 14830)
            
            #line 257 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                          , Tuple.Create(Tuple.Create("", 14822), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 14822), false)
);

WriteLiteral(" ");

            
            #line 257 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                Write(selectedTypes.Contains(jt) ? "checked=\" checked\"" : null);

            
            #line default
            #line hidden
WriteLiteral(" /><label");

WriteAttribute("for", Tuple.Create(" for=\"", 14902), Tuple.Create("\"", 14922)
, Tuple.Create(Tuple.Create("", 14908), Tuple.Create("Types_", 14908), true)
            
            #line 257 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                      , Tuple.Create(Tuple.Create("", 14914), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 14914), false)
);

WriteLiteral(">");

            
            #line 257 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                                                                                                                           Write(jt.Description);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                                    </h4>\r\n            " +
"                                        <div");

WriteAttribute("id", Tuple.Create(" id=\"", 15064), Tuple.Create("\"", 15086)
, Tuple.Create(Tuple.Create("", 15069), Tuple.Create("SubTypes_", 15069), true)
            
            #line 259 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
, Tuple.Create(Tuple.Create("", 15078), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 15078), false)
);

WriteLiteral(" class=\"jobSubTypes\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                        ");

            
            #line 260 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                   Write(CommonHelpers.CheckboxBulkSelect(string.Format("CheckboxBulkSelect_{0}", jt.Id), "div"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                        ");

            
            #line 261 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                   Write(CommonHelpers.CheckBoxList("JobSubTypes", jt.JobSubTypes.OrderBy(jst => jst.Description).ToSelectListItems(Model.DocumentTemplate.JobSubTypes), 2));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    </div>\r\n                   " +
"                             </div>\r\n");

            
            #line 264 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </div>\r\n");

WriteLiteral("                                    <script>\r\n                                   " +
"     (function () {\r\n                                            var dialog;\r\n\r\n" +
"                                            function showDialog() {\r\n           " +
"                                     if (!dialog) {\r\n                           " +
"                         dialog = $(\'#Config_DocumentTemplates_JobSubTypes_Updat" +
"e_Dialog\').dialog({\r\n                                                        res" +
"izable: false,\r\n                                                        modal: t" +
"rue,\r\n                                                        autoOpen: false,\r\n" +
"                                                        width: 750,\r\n           " +
"                                             height: 580,\r\n                     " +
"                                   buttons: {\r\n                                 " +
"                           \"Save Changes\": saveChanges,\r\n                       " +
"                                     Cancel: cancel\r\n                           " +
"                             }\r\n                                                " +
"    });\r\n\r\n                                                    dialog.find(\'.job" +
"SubTypes\').hide();\r\n                                                    dialog.o" +
"n(\'change\', \'input.jobType\', function () {\r\n                                    " +
"                    var $this = $(this);\r\n                                      " +
"                  if ($this.is(\':checked\'))\r\n                                   " +
"                         $(\'#SubTypes_\' + $this.val()).slideDown(\'fast\');\r\n     " +
"                                                   else\r\n                       " +
"                                     $(\'#SubTypes_\' + $this.val()).slideUp(\'fast" +
"\');\r\n                                                    }).find(\'input.jobType:" +
"checked\').each(function () {\r\n                                                  " +
"      $(\'#SubTypes_\' + $(this).val()).show();\r\n                                 " +
"                   });\r\n                                                }\r\n\r\n   " +
"                                             dialog.dialog(\'open\');\r\n\r\n         " +
"                                       return false;\r\n                          " +
"                  }\r\n\r\n                                            function canc" +
"el() {\r\n                                                dialog.dialog(\"disable\")" +
";\r\n                                                dialog.dialog(\"option\", \"butt" +
"ons\", null);\r\n\r\n                                                // Refresh Page\r" +
"\n                                                window.location.reload(true);\r\n" +
"                                            }\r\n\r\n                               " +
"             function saveChanges() {\r\n                                         " +
"       var form = dialog.find(\'form\');\r\n\r\n                                      " +
"          $(\'input.jobType:unchecked\').each(function () {\r\n                     " +
"                               $(\'#SubTypes_\' + $(this).val()).find(\'input\').pro" +
"p(\'checked\', false);\r\n                                                });\r\n\r\n   " +
"                                             form.submit();\r\n\r\n                 " +
"                               dialog.dialog(\"disable\");\r\n                      " +
"                          dialog.dialog(\"option\", \"buttons\", null);\r\n           " +
"                                 }\r\n\r\n                                          " +
"  $(function () {\r\n                                                $(\'#Config_Do" +
"cumentTemplates_JobSubTypes_Update\').click(showDialog);\r\n                       " +
"                     });\r\n\r\n                                        })();\r\n     " +
"                               </script>\r\n");

            
            #line 329 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 331 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </td>\r\n                </tr>\r\n                <tr>\r\n         " +
"           <th>\r\n                        &nbsp;\r\n                    </th>\r\n    " +
"                <td>\r\n                        <div>\r\n");

            
            #line 340 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 340 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                             if (canConfig)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" id=\"DocumentTemplate_FlattenForm\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" ");

            
            #line 342 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                     Write(Model.DocumentTemplate.FlattenForm ? new MvcHtmlString("checked=\"checked\" ") : new MvcHtmlString(string.Empty));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                                <label");

WriteLiteral(" for=\"DocumentTemplate_FlattenForm\"");

WriteLiteral(">Flatten Form</label>\r\n");

            
            #line 344 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 344 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                           Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 344 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                         

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
                                        document.DiscoFunctions.PropertyChangeHelper(
                                            $('#DocumentTemplate_FlattenForm'),
                                            null,
                                            '");

            
            #line 350 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                        Write(Url.Action(MVC.API.DocumentTemplate.UpdateFlattenForm(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                            \'FlattenForm\'\r\n                  " +
"                      );\r\n                                    });\r\n             " +
"                   </script>\r\n");

            
            #line 355 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                            else
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" id=\"DocumentTemplate_FlattenForm\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" ");

            
            #line 358 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                     Write(Model.DocumentTemplate.FlattenForm ? new MvcHtmlString("checked=\"checked\" ") : new MvcHtmlString(string.Empty));

            
            #line default
            #line hidden
WriteLiteral(" disabled=\"disabled\" />\r\n");

WriteLiteral("                                <label");

WriteLiteral(" for=\"DocumentTemplate_FlattenForm\"");

WriteLiteral(">Flatten Form</label>\r\n");

            
            #line 360 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral(@"></i>When a document is generated all form elements will be removed and their content written in place if this option is selected.
                            </p>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div");

WriteLiteral(" class=\"form Config_DocumentTemplates_Template\"");

WriteLiteral(" style=\"width: 650px; margin: 0 auto 20px;\"");

WriteLiteral(">\r\n        <h2>PDF Template</h2>\r\n        <table>\r\n            <tbody>\r\n         " +
"       <tr>\r\n                    <td>\r\n                        <div");

WriteLiteral(" style=\"margin: -8px -5px; max-height: 350px; overflow-y: scroll; text-align: cen" +
"ter;\"");

WriteLiteral(">\r\n                            <img");

WriteLiteral(" style=\"margin: 8px 5px;\"");

WriteAttribute("src", Tuple.Create(" src=\"", 22173), Tuple.Create("\"", 22259)
            
            #line 380 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
, Tuple.Create(Tuple.Create("", 22179), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.DocumentTemplate.TemplatePreview(Model.DocumentTemplate.Id))
            
            #line default
            #line hidden
, 22179), false)
);

WriteLiteral(" />\r\n                        </div>\r\n                    </td>\r\n                <" +
"/tr>\r\n");

            
            #line 384 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 384 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                 if (canConfig)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td>\r\n");

            
            #line 388 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 388 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                             if (Model.TemplatePagesHaveAttachmentId.Any(i => !i))
                {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n");

            
            #line 391 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 391 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                     for (int i = 0; i < Model.TemplatePagesHaveAttachmentId.Count; i++)
                                    {
                                        if (!Model.TemplatePagesHaveAttachmentId[i])
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                                <i");

WriteLiteral(" class=\"fa fa-question-circle\"");

WriteLiteral("></i>Note: Page ");

            
            #line 396 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                            Write(i + 1);

            
            #line default
            #line hidden
WriteLiteral(" does not have a <code>DiscoAttachmentId</code> field.\r\n                         " +
"                   </p>\r\n");

            
            #line 398 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                        }
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    <p");

WriteLiteral(" style=\"margin-top: 6px;\"");

WriteLiteral(@">
                                        The <code>DiscoAttachmentId</code> field is replaced with a unique QR Code which identifies the page when it is imported back into Disco ICT.
                                    </p>
                                </div>
");

            
            #line 404 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" style=\"text-align: right;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 406 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                           Write(Html.ActionLinkSmallButton("Download Template", MVC.API.DocumentTemplate.Template(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 407 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 407 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                 if (canConfig && Authorization.Has(Claims.Config.DocumentTemplate.Upload))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <button");

WriteLiteral(" class=\"button small\"");

WriteLiteral(" id=\"Config_DocumentTemplates_TemplatePdf_Button\"");

WriteLiteral(">Replace Template</button>\r\n");

WriteLiteral("                                    <div");

WriteLiteral(" id=\"Config_DocumentTemplates_TemplatePdf_Dialog\"");

WriteLiteral(" title=\"Replace Document PDF Template\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(">\r\n                                        <h4>Select a PDF Template to upload:</" +
"h4>\r\n                                        <div>\r\n");

            
            #line 413 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 413 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                             using (Html.BeginForm(MVC.API.DocumentTemplate.Template(Model.DocumentTemplate.Id, true, null), FormMethod.Post, new { enctype = "multipart/form-data" }))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"file\"");

WriteLiteral(" name=\"Template\"");

WriteLiteral(" id=\"Config_DocumentTemplates_TemplatePdf_Template\"");

WriteLiteral(" style=\"width: 250px;\"");

WriteLiteral(" />\r\n");

            
            #line 416 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </div>\r\n                                 " +
"   </div>\r\n");

WriteLiteral("                                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                        $(function () {\r\n                     " +
"                       var dialog, template;\r\n\r\n                                " +
"            function showDialog() {\r\n                                           " +
"     if (dialog == null) {\r\n                                                    " +
"template = $(\'#Config_DocumentTemplates_TemplatePdf_Template\');\r\n\r\n             " +
"                                       dialog = $(\'#Config_DocumentTemplates_Tem" +
"platePdf_Dialog\').dialog({\r\n                                                    " +
"    width: 350,\r\n                                                        resizab" +
"le: false,\r\n                                                        modal: true," +
"\r\n                                                        autoOpen: false,\r\n    " +
"                                                    buttons: {\r\n                " +
"                                            \'Upload\': function () {\r\n           " +
"                                                     if (template.val() == \'\') {" +
"\r\n                                                                    alert(\'A t" +
"emplate file is required to upload.\');\r\n                                        " +
"                        } else {\r\n                                              " +
"                      dialog.dialog(\'option\', \'buttons\', null);\r\n               " +
"                                                     dialog.dialog(\'disable\');\r\n" +
"                                                                    template.clo" +
"sest(\'form\').submit();\r\n                                                        " +
"        }\r\n                                                            },\r\n     " +
"                                                       \'Cancel\': function () {\r\n" +
"                                                                dialog.dialog(\'c" +
"lose\');\r\n                                                            }\r\n        " +
"                                                }\r\n                             " +
"                       });\r\n                                                }\r\n\r" +
"\n                                                dialog.dialog(\'open\');\r\n\r\n     " +
"                                           return false;\r\n                      " +
"                      }\r\n\r\n                                            $(\'#Confi" +
"g_DocumentTemplates_TemplatePdf_Button\').click(showDialog);\r\n                   " +
"                     });\r\n                                    </script>\r\n");

            
            #line 457 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </td>\r\n              " +
"      </tr>\r\n");

            
            #line 461 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" class=\"form Config_HideAdvanced_Item\"");

WriteLiteral(" style=\"width: 650px;\"");

WriteLiteral(">\r\n        <h2>Advanced Options</h2>\r\n        <table>\r\n            <tbody>\r\n     " +
"           <tr>\r\n                    <th>\r\n                        Filter Expres" +
"sion:\r\n                    </th>\r\n                    <td>\r\n");

            
            #line 475 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 475 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         if (canConfig && Authorization.Has(Claims.Config.DocumentTemplate.ConfigureFilterExpression))
                        {
                            
            
            #line default
            #line hidden
            
            #line 477 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Html.EditorFor(model => model.DocumentTemplate.FilterExpression));

            
            #line default
            #line hidden
            
            #line 477 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                             
                            
            
            #line default
            #line hidden
            
            #line 478 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 478 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     
                            
            
            #line default
            #line hidden
            
            #line 479 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 479 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                   
                            
            
            #line default
            #line hidden
            
            #line 480 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 480 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                $(function () {
                                    var field = $('#DocumentTemplate_FilterExpression');
                                    var fieldRemove = field.next('.ajaxRemove');
                                    var fieldOriginalWidth, fieldOriginalHeight;

                                    document.DiscoFunctions.PropertyChangeHelper(
                                        field,
                                        'None',
                                        '");

            
            #line 490 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    Write(Url.Action(MVC.API.DocumentTemplate.UpdateFilterExpression(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                        \'FilterExpression\'\r\n                 " +
"                   );\r\n\r\n                                    field.focus(functio" +
"n () {\r\n                                        fieldOriginalWidth = field.width" +
"();\r\n                                        fieldOriginalHeight = field.height(" +
");\r\n                                        field.css(\'overflow\', \'visible\').ani" +
"mate({ width: field.parent().width() - 42, height: 75 }, 200);\r\n                " +
"                    }).blur(function () {\r\n                                     " +
"   field.css(\'overflow\', \'hidden\').animate({ width: fieldOriginalWidth, height: " +
"fieldOriginalHeight }, 200);\r\n                                    }).change(func" +
"tion () {\r\n                                        if (!!field.val()) {\r\n       " +
"                                     fieldRemove.show();\r\n                      " +
"                  } else {\r\n                                            fieldRem" +
"ove.hide();\r\n                                        }\r\n                        " +
"            }).attr(\'placeholder\', \'None\').attr(\'spellcheck\', \'false\');\r\n\r\n     " +
"                               fieldRemove.click(function () {\r\n                " +
"                        field.val(\'\').change();\r\n                               " +
"     });\r\n\r\n                                    if (!!field.val()) {\r\n          " +
"                              fieldRemove.show();\r\n                             " +
"       } else {\r\n                                        fieldRemove.hide();\r\n  " +
"                                  }\r\n                                });\r\n      " +
"                      </script>\r\n");

            
            #line 519 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        }
                        else
                        {
                            if (string.IsNullOrWhiteSpace(Model.DocumentTemplate.FilterExpression))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 525 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                            else
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 529 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                               Write(Model.DocumentTemplate.FilterExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 531 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral(@"></i>This expression will be evaluated to determine if this template is shown in the <em>Generate Document</em> drop-down list. If the template is hidden (see above) this expression is ignored.
                            </p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        On Generated Expression:
                    </th>
                    <td>
");

            
            #line 545 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 545 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         if (canConfig && Authorization.Has(Claims.Config.DocumentTemplate.ConfigureFilterExpression))
                        {
                            
            
            #line default
            #line hidden
            
            #line 547 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Html.EditorFor(model => model.DocumentTemplate.OnGenerateExpression));

            
            #line default
            #line hidden
            
            #line 547 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                 
                            
            
            #line default
            #line hidden
            
            #line 548 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 548 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     
                            
            
            #line default
            #line hidden
            
            #line 549 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 549 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                   
                            
            
            #line default
            #line hidden
            
            #line 550 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 550 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                $(function () {
                                    var field = $('#DocumentTemplate_OnGenerateExpression');
                                    var fieldRemove = field.next('.ajaxRemove');
                                    var fieldOriginalWidth, fieldOriginalHeight;

                                    document.DiscoFunctions.PropertyChangeHelper(
                                        field,
                                        'None',
                                        '");

            
            #line 560 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    Write(Url.Action(MVC.API.DocumentTemplate.UpdateOnGenerateExpression(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                        \'OnGenerateExpression\'\r\n             " +
"                       );\r\n\r\n                                    field.focus(fun" +
"ction () {\r\n                                        fieldOriginalWidth = field.w" +
"idth();\r\n                                        fieldOriginalHeight = field.hei" +
"ght();\r\n                                        field.css(\'overflow\', \'visible\')" +
".animate({ width: field.parent().width() - 42, height: 75 }, 200);\r\n            " +
"                        }).blur(function () {\r\n                                 " +
"       field.css(\'overflow\', \'hidden\').animate({ width: fieldOriginalWidth, heig" +
"ht: fieldOriginalHeight }, 200);\r\n                                    }).change(" +
"function () {\r\n                                        if (!!field.val()) {\r\n   " +
"                                         fieldRemove.show();\r\n                  " +
"                      } else {\r\n                                            fiel" +
"dRemove.hide();\r\n                                        }\r\n                    " +
"                }).attr(\'placeholder\', \'None\').attr(\'spellcheck\', \'false\');\r\n\r\n " +
"                                   fieldRemove.click(function () {\r\n            " +
"                            field.val(\'\').change();\r\n                           " +
"         });\r\n\r\n                                    if (!!field.val()) {\r\n      " +
"                                  fieldRemove.show();\r\n                         " +
"           } else {\r\n                                        fieldRemove.hide();" +
"\r\n                                    }\r\n                                });\r\n  " +
"                          </script>\r\n");

            
            #line 589 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        }
                        else
                        {
                            if (string.IsNullOrWhiteSpace(Model.DocumentTemplate.OnGenerateExpression))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 595 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                            else
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 599 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                               Write(Model.DocumentTemplate.OnGenerateExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 601 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral(@"></i>This expression will be evaluated each time a document is generated from this template.
                            </p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        On Import Expression:
                    </th>
                    <td>
");

            
            #line 615 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 615 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                         if (canConfig && Authorization.Has(Claims.Config.DocumentTemplate.ConfigureFilterExpression))
                        {
                            
            
            #line default
            #line hidden
            
            #line 617 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Html.EditorFor(model => model.DocumentTemplate.OnImportAttachmentExpression));

            
            #line default
            #line hidden
            
            #line 617 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                         
                            
            
            #line default
            #line hidden
            
            #line 618 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 618 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     
                            
            
            #line default
            #line hidden
            
            #line 619 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 619 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                   
                            
            
            #line default
            #line hidden
            
            #line 620 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 620 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                     

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                $(function () {
                                    var field = $('#DocumentTemplate_OnImportAttachmentExpression');
                                    var fieldRemove = field.next('.ajaxRemove');
                                    var fieldOriginalWidth, fieldOriginalHeight;

                                    document.DiscoFunctions.PropertyChangeHelper(
                                        field,
                                        'None',
                                        '");

            
            #line 630 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                    Write(Url.Action(MVC.API.DocumentTemplate.UpdateOnImportAttachmentExpression(Model.DocumentTemplate.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                        \'OnImportAttachmentExpression\'\r\n     " +
"                               );\r\n\r\n                                    field.f" +
"ocus(function () {\r\n                                        fieldOriginalWidth =" +
" field.width();\r\n                                        fieldOriginalHeight = f" +
"ield.height();\r\n                                        field.css(\'overflow\', \'v" +
"isible\').animate({ width: field.parent().width() - 42, height: 75 }, 200);\r\n    " +
"                                }).blur(function () {\r\n                         " +
"               field.css(\'overflow\', \'hidden\').animate({ width: fieldOriginalWid" +
"th, height: fieldOriginalHeight }, 200);\r\n                                    })" +
".change(function () {\r\n                                        if (!!field.val()" +
") {\r\n                                            fieldRemove.show();\r\n          " +
"                              } else {\r\n                                        " +
"    fieldRemove.hide();\r\n                                        }\r\n            " +
"                        }).attr(\'placeholder\', \'None\').attr(\'spellcheck\', \'false" +
"\');\r\n\r\n                                    fieldRemove.click(function () {\r\n    " +
"                                    field.val(\'\').change();\r\n                   " +
"                 });\r\n\r\n                                    if (!!field.val()) {" +
"\r\n                                        fieldRemove.show();\r\n                 " +
"                   } else {\r\n                                        fieldRemove" +
".hide();\r\n                                    }\r\n                               " +
" });\r\n                            </script>\r\n");

            
            #line 659 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        }
                        else
                        {
                            if (string.IsNullOrWhiteSpace(Model.DocumentTemplate.OnImportAttachmentExpression))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 665 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                            else
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 669 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                               Write(Model.DocumentTemplate.OnImportAttachmentExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 671 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral(@"></i>This expression will be evaluated each time a document is imported (as an attachment) where it is determined the document was based on this template.
                            </p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        Linked Groups:
                    </th>
                    <td>
                        <div>
");

WriteLiteral("                            ");

            
            #line 686 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupInstance, new LinkedGroupModel()
                       {
                           CanConfigure = canConfig,
                           CategoryDescription = DocumentTemplateUsersManagedGroup.GetCategoryDescription(Model.DocumentTemplate),
                           Description = DocumentTemplateUsersManagedGroup.GetDescription(Model.DocumentTemplate),
                           ManagedGroup = Model.UsersLinkedGroup,
                           IncludeFilterBeginDate = true,
                           UpdateUrl = Url.Action(MVC.API.DocumentTemplate.UpdateUsersLinkedGroup(Model.DocumentTemplate.Id, redirect: true))
                       }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                            ");

            
            #line 695 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                       Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupInstance, new LinkedGroupModel()
                       {
                           CanConfigure = canConfig,
                           CategoryDescription = DocumentTemplateDevicesManagedGroup.GetCategoryDescription(Model.DocumentTemplate),
                           Description = DocumentTemplateDevicesManagedGroup.GetDescription(Model.DocumentTemplate),
                           ManagedGroup = Model.DevicesLinkedGroup,
                           IncludeFilterBeginDate = true,
                           UpdateUrl = Url.Action(MVC.API.DocumentTemplate.UpdateDevicesLinkedGroup(Model.DocumentTemplate.Id, redirect: true))
                       }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 704 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 704 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                             if (canConfig)
                            {
                                
            
            #line default
            #line hidden
            
            #line 706 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                           Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupShared));

            
            #line default
            #line hidden
            
            #line 706 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                        
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                    </td>\r\n                </tr>\r" +
"\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n        <h2>Template Expressions</h2>\r\n");

WriteLiteral("        ");

            
            #line 716 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
   Write(Html.Partial(MVC.Config.DocumentTemplate.Views._ExpressionsTable, Model.TemplateExpressions));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n</div>\r\n<div");

WriteLiteral(" id=\"dialogConfirmDelete\"");

WriteLiteral(" title=\"Delete this Document Template?\"");

WriteLiteral(">\r\n    <p>\r\n        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg warning\"");

WriteLiteral(@"></i>This item will be permanently deleted and cannot be recovered.<br />
        <em>
            This <strong>will not delete attachments</strong> which have already been imported,
            but any generated documents will no longer be automatically imported.
        </em><br />
        Are you sure?
    </p>
</div>
<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
    $(function () {
        var button = $('#buttonDelete');
        var buttonDialog = $(""#dialogConfirmDelete"");
        var buttonLink = button.attr('href');
        button.attr('href', '#');
        button.click(function () {
            buttonDialog.dialog('open');
            return false;
        });
        buttonDialog.dialog({
            resizable: false,
            modal: true,
            autoOpen: false,
            buttons: {
                ""Delete"": function () {
                    $this = $(this);
                    $this.dialog('disable');
                    $this.dialog(""option"", ""buttons"", null);
                    window.location.href = buttonLink;
                },
                Cancel: function () {
                    $(this).dialog(""close"");
                }
            }
        });

    });
</script>
<div");

WriteLiteral(" class=\"actionBar\"");

WriteLiteral(">\r\n");

            
            #line 759 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
    
            
            #line default
            #line hidden
            
            #line 759 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
     if (hideAdvanced)
    {

            
            #line default
            #line hidden
WriteLiteral("        <button");

WriteLiteral(" id=\"Config_HideAdvanced_Show\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(">Show Advanced Options</button>\r\n");

WriteLiteral(@"        <script>
            $(function () {
                $('#Config_HideAdvanced_Show').click(function () {
                    $('#Config_DocumentTemplates_Show').removeClass('Config_HideAdvanced');
                    $(this).remove();
                });
            });
        </script>
");

            
            #line 770 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 771 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
     if (Authorization.Has(Claims.Config.Show))
    {
        
            
            #line default
            #line hidden
            
            #line 773 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
   Write(Html.ActionLinkButton("Expression Browser", MVC.Config.DocumentTemplate.ExpressionBrowser()));

            
            #line default
            #line hidden
            
            #line 773 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                     
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 775 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
     if (canBulkGenerate)
    {

            
            #line default
            #line hidden
WriteLiteral("        <a");

WriteLiteral(" id=\"buttonBulkGenerate\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(">Bulk Generate</a>\r\n");

WriteLiteral("        <div");

WriteLiteral(" id=\"dialogBulkGenerate\"");

WriteLiteral(" class=\"hiddenDialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 44007), Tuple.Create("\"", 44058)
, Tuple.Create(Tuple.Create("", 44015), Tuple.Create("Bulk", 44015), true)
, Tuple.Create(Tuple.Create(" ", 44019), Tuple.Create("Generate:", 44020), true)
            
            #line 778 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
, Tuple.Create(Tuple.Create(" ", 44029), Tuple.Create<System.Object, System.Int32>(Model.DocumentTemplate.Id
            
            #line default
            #line hidden
, 44030), false)
);

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"brief\"");

WriteLiteral(">\r\n");

            
            #line 780 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 780 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                 switch (Model.DocumentTemplate.Scope)
                {
                    case "Device":

            
            #line default
            #line hidden
WriteLiteral("                        <div>\r\n                            Enter multiple <span");

WriteLiteral(" class=\"scopeDescBulkGenerate\"");

WriteLiteral(">Device Serial Numbers</span> separated by <code>&lt;new line&gt;</code>, commas " +
"(<code>,</code>) or semicolons (<code>;</code>).\r\n                        </div>" +
"\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"examples clearfix\"");

WriteLiteral(">\r\n                            <h4>Examples:</h4>\r\n                            <d" +
"iv");

WriteLiteral(" class=\"example1 code\"");

WriteLiteral(">\r\n                                01234567<br />\r\n                              " +
"  ABCD9876<br />\r\n                                8VQ6G2R\r\n                     " +
"       </div>\r\n                            <div");

WriteLiteral(" class=\"example2 code\"");

WriteLiteral(">01234567,ABCD9876,8VQ6G2R</div>\r\n                            <div");

WriteLiteral(" class=\"example3 code\"");

WriteLiteral(">01234567;ABCD9876;8VQ6G2R</div>\r\n                        </div>\r\n");

            
            #line 796 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        break;
                    case "Job":

            
            #line default
            #line hidden
WriteLiteral("                        <div>\r\n                            Enter multiple <span");

WriteLiteral(" class=\"scopeDescBulkGenerate\"");

WriteLiteral(">Job Ids</span> separated by <code>&lt;new line&gt;</code>, commas (<code>,</code" +
">) or semicolons (<code>;</code>).\r\n                        </div>\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"examples clearfix\"");

WriteLiteral(">\r\n                            <h4>Examples:</h4>\r\n                            <d" +
"iv");

WriteLiteral(" class=\"example1 code\"");

WriteLiteral(">\r\n                                86<br />\r\n                                99<b" +
"r />\r\n                                44\r\n                            </div>\r\n  " +
"                          <div");

WriteLiteral(" class=\"example2 code\"");

WriteLiteral(">86,99,44</div>\r\n                            <div");

WriteLiteral(" class=\"example3 code\"");

WriteLiteral(">86;99;44</div>\r\n                        </div>\r\n");

            
            #line 811 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        break;
                    case "User":

            
            #line default
            #line hidden
WriteLiteral("                        <div>\r\n                            Enter multiple <span");

WriteLiteral(" class=\"scopeDescBulkGenerate\"");

WriteLiteral(">User Ids</span> separated by <code>&lt;new line&gt;</code>, commas (<code>,</cod" +
"e>) or semicolons (<code>;</code>).\r\n                        </div>\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"examples clearfix\"");

WriteLiteral(">\r\n                            <h4>Examples:</h4>\r\n                            <d" +
"iv");

WriteLiteral(" class=\"example1 code\"");

WriteLiteral(">\r\n                                user6<br />\r\n                                s" +
"mi0099<br />");

            
            #line 820 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                         Write(ActiveDirectory.Context.PrimaryDomain.NetBiosName);

            
            #line default
            #line hidden
WriteLiteral("\\rsmith\r\n                            </div>\r\n                            <div");

WriteLiteral(" class=\"example2 code\"");

WriteLiteral(">user6,smi0099,");

            
            #line 822 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                 Write(ActiveDirectory.Context.PrimaryDomain.NetBiosName);

            
            #line default
            #line hidden
WriteLiteral("\\rsmith</div>\r\n                            <div");

WriteLiteral(" class=\"example3 code\"");

WriteLiteral(">user6;smi0099;");

            
            #line 823 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                 Write(ActiveDirectory.Context.PrimaryDomain.NetBiosName);

            
            #line default
            #line hidden
WriteLiteral("\\rsmith</div>\r\n                        </div>\r\n");

            
            #line 825 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                        break;
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n");

            
            #line 828 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
            
            
            #line default
            #line hidden
            
            #line 828 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
             using (Html.BeginForm(MVC.API.DocumentTemplate.BulkGenerate(Model.DocumentTemplate.Id), FormMethod.Post))
            {

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"field-validation-valid\"");

WriteLiteral(" data-valmsg-replace=\"true\"");

WriteLiteral(" data-valmsg-for=\"DataIds\"");

WriteLiteral("></div>\r\n");

WriteLiteral("                <textarea");

WriteLiteral(" id=\"inputBulkGenerateDataIds\"");

WriteLiteral(" name=\"DataIds\"");

WriteLiteral(" data-val=\"true\"");

WriteLiteral(" data-val-required=\"Identifiers are required\"");

WriteLiteral("></textarea>\r\n");

            
            #line 832 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                if (Model.TemplatePageCount > 1 && Model.TemplatePageCount % 2 != 0)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" style=\"margin-top: 6px;\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"inputBulkGenerateInsertBlankPage\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"InsertBlankPage\"");

WriteLiteral(" value=\"True\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"inputBulkGenerateInsertBlankPage\"");

WriteLiteral(">Insert Blank Pages for Double-Sided Printing</label>\r\n                    </div>" +
"\r\n");

            
            #line 837 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                }
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n");

            
            #line 840 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"


            
            #line default
            #line hidden
WriteLiteral(@"        <script>
            $(function () {
                var dialog;

                $('#buttonBulkGenerate').click(function () {
                    if (!dialog) {
                        dialog = $('#dialogBulkGenerate').dialog({
                            resizable: false,
                            modal: true,
                            autoOpen: false,
                            width: 460,
                            buttons: {
                                ""Bulk Generate"": function () {
                                    dialog.find('form').submit();
                                    dialog.dialog(""disable"");
                                },
                                Close: function () {
                                    $(this).dialog(""close"");
                                }
                            }
                        });

                        $.validator.unobtrusive.reparse('#inputBulkGenerateDataIds');
                    }

                    dialog.dialog('open');
                    return false;
                });
            });
        </script>
");

            
            #line 871 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 872 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
     if (Authorization.Has(Claims.Config.DocumentTemplate.Delete))
    {
        
            
            #line default
            #line hidden
            
            #line 874 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
   Write(Html.ActionLinkButton("Delete", MVC.API.DocumentTemplate.Delete(Model.DocumentTemplate.Id, true), "buttonDelete"));

            
            #line default
            #line hidden
            
            #line 874 "..\..\Areas\Config\Views\DocumentTemplate\Show.cshtml"
                                                                                                                          
    }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

        }
    }
}
#pragma warning restore 1591
